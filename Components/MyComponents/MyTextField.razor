@using System.Text.RegularExpressions
<style>
    input, textarea {
        background: transparent;
        border: none;
        color: antiquewhite;
        width: 100%;
        white-space: nowrap;
        overflow: hidden; 
        text-overflow: ellipsis;
        font-family: inherit;
    }

    input:focus, textarea:focus {
        outline: none;
        border: none;
        background: transparent;
    }

    .input-container {
        position: relative;
        min-width: 220px;
        width: fit-content;
    }

    .input-wrapper {
        display: flex;
        align-items: center;
        min-height: 48px;
        overflow: hidden;
    }

    .label {
        position: absolute;
        left: 12px;
        top: -6px;
        background: var(--Background, #34343C);
        padding: 0 4px;
        color: antiquewhite;
        font-size: 12px;
        font-family: Roboto;
        font-weight: 400;
        line-height: 16px;
        letter-spacing: 0.40px;
        z-index: 1;
    }

    .input-field {
        flex: 1;
        padding: 12px;
        min-width: 220px;
    }


    textarea {
        white-space: normal;
        overflow-y: auto; 
        min-height: 48px; 
    }
</style>

<div class="input-container">
    <div class="input-wrapper" style="border-radius: 4px; outline: 1px var(--Gold, #FBD61C) solid;">
        <div class="label">@LabelText</div>
        <div class="input-field">
            @if (IsPhoneNumber)
            {
                <InputWithPhoneMask @bind-Value="CurrentValue"
                placeholder="+7 (___) ___-__-__"
                style="width: 100%; background: transparent; border: none; color: antiquewhite;" />
            }
            else if(!isTextArea)
            {
                <input @bind="CurrentValue"
                @bind:event="oninput"
                placeholder="@Placeholder"
                style="width: 100%; background: transparent; border: none; color: antiquewhite;" />
            }
            else {
                <textarea @bind="CurrentValue"
                       placeholder="@Placeholder"
                       style="width: 100%; background: transparent; border: none; color: antiquewhite;"
                       @oninput="HandleTextareaInput" />
            }
        </div>
    </div>
</div>

@code {
    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object> AdditionalAttributes { get; set; } = new();

    [Parameter] public bool isTextArea { get; set; } = false;
    [Parameter] public string LabelText { get; set; } = "Текст";
    [Parameter] public bool IsPhoneNumber { get; set; } = false;
    [Parameter] public string Value { get; set; } = "";
    [Parameter] public EventCallback<string> ValueChanged { get; set; }
    [Parameter] public string Placeholder { get; set; } = "";

    private string CurrentValue
    {
        get => Value;
        set
        {
            if (Value != value)
            {
                Value = value;
                ValueChanged.InvokeAsync(value);
            }
        }
    }

    private void HandleTextareaInput(ChangeEventArgs e)
    {
        CurrentValue = e.Value?.ToString() ?? "";
    }
}